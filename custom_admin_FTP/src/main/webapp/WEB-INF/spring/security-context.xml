<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 검사 -->
	<http use-expressions="true">
		<intercept-url pattern="/login/loginForm.do" access="permitAll"/>
		<intercept-url pattern="/" access="permitAll"/>
		<intercept-url pattern="/register" access="permitAll"/>
		<intercept-url pattern="/checkDuplicatedId" access="permitAll"/>
		<intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
		<intercept-url pattern="/**" access="hasAnyRole('USER, ADMIN')"/>
		
		
		<form-login login-page="/login/loginForm.do"
					default-target-url="/"
					authentication-failure-url="/login/loginForm.do?error"
					username-parameter="userId"
					password-parameter="password"/>
		<logout logout-url="/logout"
				logout-success-url="/"/>
		<access-denied-handler error-page="/login/accessDenied.do"/>			
	</http>
	
	<!-- provider -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service 
				data-source-ref="dataSource"
				role-prefix=""
				users-by-username-query="select user_id, password, enabled from user where user_id = ?"
				authorities-by-username-query="select user_id, authority from authorities where user_id = ?"
				group-authorities-by-username-query="select g.id, g.group_name, ga.authority 
													from groupss g, group_member gm, group_authorities ga 
													where gm.user_id = ? and g.id = ga.group_id and g.id = gm.group_id"
			/>
		</authentication-provider>
	</authentication-manager>
	
	
</beans:beans>
